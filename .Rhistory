#| warning=FALSE
library(tidyverse) # Load the tidyverse package - make sure to install it first if you haven't done so yet
library(plotly) # Load the plotly package - make sure to install it first if you haven't done so yet
library(cowplot) # Load the cowplot package - make sure to install it first if you haven't done so yet
install.packages("plotly")
install.packages("plotly")
install.packages("cowplot")
#| warning=FALSE
library(tidyverse) # Load the tidyverse package - make sure to install it first if you haven't done so yet
library(plotly) # Load the plotly package - make sure to install it first if you haven't done so yet
library(cowplot) # Load the cowplot package - make sure to install it first if you haven't done so yet
install.packages("plotly")
install.packages("plotly")
install.packages("cowplot")
#| warning=FALSE
library(tidyverse) # Load the tidyverse package - make sure to install it first if you haven't done so yet
library(plotly) # Load the plotly package - make sure to install it first if you haven't done so yet
library(cowplot) # Load the cowplot package - make sure to install it first if you haven't done so yet
install.packages("plotly")
install.packages("tidyverse")
install.packages("cowplot")
install.packages("tidyverse")
install.packages("plotly")
#| echo: true
library(foreign)
url <- 'https://github.com/fans-stats/intro_to_R_stats/blob/main/datasets/researchers_sample.SAV?raw=true'
data <- read.spss(url, to.data.frame=TRUE) %>%
tibble::as_tibble()
#| echo: true
library(foreign)
url <- 'https://github.com/fans-stats/intro_to_R_stats/blob/main/datasets/researchers_sample.SAV?raw=true'
data <- read.spss(url) %>%
tibble::as_tibble()
#| echo: true
library(foreign)
url <- 'https://github.com/fans-stats/intro_to_R_stats/blob/main/datasets/researchers_sample.SAV?raw=true'
data <- read.spss(url)
data
#| echo: true
library(foreign)
url <- 'https://github.com/fans-stats/intro_to_R_stats/blob/main/datasets/researchers_sample.SAV?raw=true'
data <- read.spss(url, to.data.frame=TRUE) %>%
tibble::as_tibble()
#| echo: true
library(foreign)
url <- 'https://github.com/fans-stats/intro_to_R_stats/blob/main/datasets/researchers_sample.SAV?raw=true'
data <- read.spss(url, to.data.frame=TRUE)
data
#| echo: true
library(foreign)
url <- 'https://github.com/fans-stats/intro_to_R_stats/blob/main/datasets/researchers_sample.SAV?raw=true'
data <- read.spss(url, to.data.frame=TRUE)
data <- tibble::as_tibble()
#| echo: true
library(foreign)
url <- 'https://github.com/fans-stats/intro_to_R_stats/blob/main/datasets/researchers_sample.SAV?raw=true'
data <- read.spss(url, to.data.frame=TRUE)
data <- data.tibble::as_tibble()
#| echo: true
library(foreign)
url <- 'https://github.com/fans-stats/intro_to_R_stats/blob/main/datasets/researchers_sample.SAV?raw=true'
data <- read.spss(url, to.data.frame=TRUE)
data <- as_tibble(data)
#| echo: true
library(foreign)
url <- 'https://github.com/fans-stats/intro_to_R_stats/blob/main/datasets/researchers_sample.SAV?raw=true'
data2 <- read.spss(url, to.data.frame=TRUE)
data <- as_tibble(data2)
#| echo: true
library(foreign)
library(tibble)
url <- 'https://github.com/fans-stats/intro_to_R_stats/blob/main/datasets/researchers_sample.SAV?raw=true'
data2 <- read.spss(url, to.data.frame=TRUE)
data <- as_tibble(data2)
data
#| echo: true
library(foreign)
library(tibble)
url <- 'https://github.com/fans-stats/intro_to_R_stats/blob/main/datasets/researchers_sample.SAV?raw=true'
data <- read.spss(url, to.data.frame=TRUE) %>%
tibble::as_tibble()
data
#| echo: true
# Remove typos
data$age[data$id==4] <- NA
data$work[data$id==54] <- NA
data$statisfaction[data$id==72] <- NA
#| echo: true
# Remove typos
data$age[data$id==4] <- NA
data$work[data$id==54] <- NA
data$satisfaction[data$id==72] <- NA
t.test(data$work, mu = 7.00)
lm(data$work ~ 1) %>%
summary()
url <- 'https://github.com/fans-stats/intro_to_R_stats/blob/main/datasets/children_nutrition.SAV?raw=true'
dataset <- read.spss(file=url, to.data.frame = TRUE) %>%
tibble::as.tibble()
dataset
url <- 'https://github.com/fans-stats/intro_to_R_stats/blob/main/datasets/children_nutrition.SAV?raw=true'
dataset <- read.spss(file=url, to.data.frame = TRUE) %>%
tibble::as_tibble()
dataset
t.test(formula=Height2014 ~ Area, data=dataset, var.equal=TRUE)
lm(Height2014 ~ Area, data = dataset) %>%
summary()
#| echo: true
library(palmerpenguins) # Load the palmerpenguins package - make sure to install it first if you haven't done so yet
#| echo: true
library(palmerpenguins) # Load the palmerpenguins package - make sure to install it first if you haven't done so yet
data(package= 'palmerpenguins')
#| echo: true
library(palmerpenguins) # Load the palmerpenguins package - make sure to install it first if you haven't done so yet
data(package= 'palmerpenguins')
data
#| echo: true
library(palmerpenguins) # Load the palmerpenguins package - make sure to install it first if you haven't done so yet
data2(package= 'palmerpenguins')
#| echo: true
library(palmerpenguins) # Load the palmerpenguins package - make sure to install it first if you haven't done so yet
data(package = 'palmerpenguins')
#| echo: true
penguins <- palmerpenguins::penguins %>%
tibble::as_tibble()
penguins
penguins %>%
lm(bill_length_mm ~ flipper_length_mm + species, data = .) %>%
summary()
#| echo: true
p <- ggplot(penguins, aes(x = flipper_length_mm, y = bill_length_mm, color = species)) +
geom_point() +
geom_smooth(method = 'lm', se = FALSE) +
theme_minimal() +
scale_color_viridis_d(option = "E", begin = 0, end = 0.8)
#| echo: true
p <- ggplot(penguins, aes(x = flipper_length_mm, y = bill_length_mm, color = species)) +
geom_point() +
geom_smooth(method = 'lm', se = FALSE) +
theme_minimal() +
scale_color_viridis_d(option = "E", begin = 0, end = 0.8)
#| echo: true
library(ggplot2)
p <- ggplot(penguins, aes(x = flipper_length_mm, y = bill_length_mm, color = species)) +
geom_point() +
geom_smooth(method = 'lm', se = FALSE) +
theme_minimal() +
scale_color_viridis_d(option = "E", begin = 0, end = 0.8)
ggplotly(p)
#| echo: true
library(ggplot2)
library(plotly)
p <- ggplot(penguins, aes(x = flipper_length_mm, y = bill_length_mm, color = species)) +
geom_point() +
geom_smooth(method = 'lm', se = FALSE) +
theme_minimal() +
scale_color_viridis_d(option = "E", begin = 0, end = 0.8)
ggplotly(p)
#| echo: true
library(broom)
# Fit the model and agument with fitted values and residuals by species
penguins_augmented <- penguins %>%
group_by(species) %>%
do(augment(lm(bill_length_mm ~ flipper_length_mm, data = .)))
# Plot with residual lines
p <- ggplot(penguins_augmented, aes(x = flipper_length_mm, y = bill_length_mm, color = species)) +
gemo_point() +
geom_smooth(method = 'lm', se = FALSE) +
theme_minimal() +
geom_segment(aes(xend = flipper_length_mm, yend = .fitted), alpha = 0.5) +
scale_color_viridis_d(option = "E", begin = 0, end = 0.8)
#| echo: true
library(broom)
# Fit the model and agument with fitted values and residuals by species
penguins_augmented <- penguins %>%
group_by(species) %>%
do(augment(lm(bill_length_mm ~ flipper_length_mm, data = .)))
# Plot with residual lines
p <- ggplot(penguins_augmented, aes(x = flipper_length_mm, y = bill_length_mm, color = species)) +
geom_point() +
geom_smooth(method = 'lm', se = FALSE) +
theme_minimal() +
geom_segment(aes(xend = flipper_length_mm, yend = .fitted), alpha = 0.5) +
scale_color_viridis_d(option = "E", begin = 0, end = 0.8)
ggplotly(p)
p <- penguins %>%
lm(bill_length_mm ~ flipper_length_mm + species, data = .) %>%
augment() %>%
ggplot(aes(x = .fitted, y = .resid, color = species)) +
geom_point() +
geom_hline(yintercept = 0, linetype = 'dashed') +
theme_minimal() +
scale_color_viridis_d(option = "E", begin = 0, end = 0.8)
ggplotly(p)
p <- penguins %>%
lm(bill_length_mm ~ flipper_length_mm + species, data = .) %>%
augment() %>%
ggplot(aes(x = flipper_length_mm, y = .resid, color = species)) +
geom_point() +
geom_hline(yintercept = 0, linetype = 'dashed') +
theme_minimal() +
scale_color_viridis_d(option = "E", begin = 0, end = 0.8)
ggplotly(p)
p <- penguins %>%
lm(bill_length_mm ~ flipper_length_mm + species, data = .) %>%
augment() %>%
ggplot(aes(x = species, y = .resid, color = species)) +
geom_point() +
geom_hline(yintercept = 0, linetype = 'dashed') +
theme_minimal() +
scale_color_viridis_d(option = "E", begin = 0, end = 0.8)
ggplotly(p)
p <- penguins %>%
lm(bill_length_mm ~ flipper_length_mm + species, data = .) %>%
augment() %>%
ggplot(aes(sample = .resid)) +
stat_qq() +
theme_minimal()
ggplotly(p)
source("~/Desktop/Rayhan/CodePractice(Git)/R/test.R")
install.packages("readODS")
source("~/Desktop/Rayhan/CodePractice(Git)/R/test.R")
# Load the data from the Excel file
data <- read_excel("./PreparedData.xlsx")
source("~/Desktop/Rayhan/CodePractice(Git)/R/KV6015-AssessmentRoughAnswer.R")
# Load the data from the Excel file
data <- read_excel("./PreparedData.xlsx")
# View the first few rows of the data
head(data)
library(tibble)
library(readxl)
# Load the data from the Excel file
data <- read_excel("./PreparedData.xlsx")
# View the first few rows of the data
head(data)
source("~/Desktop/Rayhan/CodePractice(Git)/R/KV6015-AssessmentRoughAnswer.R")
source("~/Desktop/Rayhan/CodePractice(Git)/R/KV6015-AssessmentRoughAnswer.R")
clear
source("~/Desktop/Rayhan/CodePractice(Git)/R/KV6015-AssessmentRoughAnswer.R")
source("~/Desktop/Rayhan/CodePractice(Git)/R/KV6015-AssessmentRoughAnswer.R")
library(dplyr)
# View the updated data
head(data_tibble)
source("~/Desktop/Rayhan/CodePractice(Git)/R/KV6015-AssessmentRoughAnswer.R")
# View the updated data
head(data_tibble)
# Calculate the reduction in the number of candidates for Male and Female
data_tibble <- data_tibble %>%
arrange(Date) %>%
group_by(Period) %>%
mutate(
Male_tests_Reduction = c(NA, diff(Male.tests.Conducted)),
Female_tests_Reduction = c(NA, diff(Female.tests.Conducted))
)
source("~/Desktop/Rayhan/CodePractice(Git)/R/KV6015-AssessmentRoughAnswer.R")
data_tibble <- data_tibble %>%
arrange(Date) %>%
group_by(Period) %>%
mutate(
Male_tests_Reduction = c(NA, diff(`Male tests-Conducted`)),
Female_tests_Reduction = c(NA, diff(`Female tests-Conducted`))
)
# View the data with reductions
head(data_tibble)
# Fit a linear model for Male tests reduction
model_male <- lm(Male_tests_Reduction ~ Period, data = data_tibble)
summary(model_male)
# Fit a linear model for Female tests reduction
model_female <- lm(Female_tests_Reduction ~ Period, data = data_tibble)
summary(model_female)
summary(model_male)
library(ggplot2)
# Plot the reduction for male candidates across periods
ggplot(data_tibble, aes(x = Period, y = Male_tests_Reduction, fill = Period)) +
geom_boxplot() +
labs(title = "Reduction in Male Driving Test Candidates by Period",
x = "Period", y = "Male Tests Reduction") +
theme_minimal()
# Plot the reduction for female candidates across periods
ggplot(data_tibble, aes(x = Period, y = Female_tests_Reduction, fill = Period)) +
geom_boxplot() +
labs(title = "Reduction in Female Driving Test Candidates by Period",
x = "Period", y = "Female Tests Reduction") +
theme_minimal()
source("~/Desktop/Rayhan/CodePractice(Git)/R/KV6015-AssessmentRoughAnswer.R")
# Plot the reduction for male candidates across periods
ggplot(data_tibble, aes(x = Period, y = Male_tests_Reduction, fill = Period)) +
geom_boxplot() +
labs(title = "Reduction in Male Driving Test Candidates by Period",
x = "Period", y = "Male Tests Reduction") +
theme_minimal()
summary(model_female)
# Create a summary data frame to calculate total tests and reductions by period
data_tibble_summary <- data_tibble %>%
group_by(Period) %>%
summarise(Total_Male_Tests = sum(`Male tests-Conducted`),
Total_Female_Tests = sum(`Female tests-Conducted`),
Male_Reduction = sum(Male_tests_Reduction),
Female_Reduction = sum(Female_tests_Reduction))
# Plot for total male tests conducted and reductions
ggplot(data_tibble_summary, aes(x = Period)) +
geom_bar(aes(y = Total_Male_Tests), stat = "identity", fill = "skyblue", alpha = 0.7, width = 0.4) +
geom_line(aes(y = Male_Reduction * 5), group = 1, color = "red", size = 1.5) +  # Scaling reduction to match total tests
geom_point(aes(y = Male_Reduction * 5), color = "red", size = 3) +
labs(title = "Total Male Tests and Reduction by Period",
x = "Period", y = "Total Male Tests / Male Tests Reduction (Scaled)") +
theme_minimal()
# Plot for total female tests conducted and reductions
ggplot(data_tibble_summary, aes(x = Period)) +
geom_bar(aes(y = Total_Female_Tests), stat = "identity", fill = "lightgreen", alpha = 0.7, width = 0.4) +
geom_line(aes(y = Female_Reduction * 5), group = 1, color = "purple", size = 1.5) +  # Scaling reduction to match total tests
geom_point(aes(y = Female_Reduction * 5), color = "purple", size = 3) +
labs(title = "Total Female Tests and Reduction by Period",
x = "Period", y = "Total Female Tests / Female Tests Reduction (Scaled)") +
theme_minimal()
# Plot for total male tests conducted and reductions
ggplot(data_tibble_summary, aes(x = Period)) +
geom_bar(aes(y = Total_Male_Tests), stat = "identity", fill = "skyblue", alpha = 0.7, width = 0.4) +
geom_line(aes(y = Male_Reduction * 5), group = 1, color = "red", size = 1.5) +  # Scaling reduction to match total tests
geom_point(aes(y = Male_Reduction * 5), color = "red", size = 3) +
labs(title = "Total Male Tests and Reduction by Period",
x = "Period", y = "Total Male Tests / Male Tests Reduction (Scaled)") +
theme_minimal()
# Plot for total male tests conducted and reductions
ggplot(data_tibble_summary, aes(x = Period)) +
geom_bar(aes(y = Total_Male_Tests), stat = "identity", fill = "skyblue", alpha = 0.7, width = 0.4) +
geom_line(aes(y = Male_Reduction * 5), group = 1, color = "red", size = 1.5) +  # Scaling reduction to match total tests
geom_point(aes(y = Male_Reduction * 5), color = "red", size = 3) +
labs(title = "Total Male Tests and Reduction by Period",
x = "Period", y = "Total Male Tests / Male Tests Reduction (Scaled)") +
scale_y_continuous(labels = label_comma()) +  # Format y-axis labels with commas for readability
theme_minimal()
source("~/Desktop/Rayhan/CodePractice(Git)/R/KV6015-AssessmentRoughAnswer.R")
install.packages("scales")
library(scales)
# Plot for total male tests conducted and reductions
ggplot(data_tibble_summary, aes(x = Period)) +
geom_bar(aes(y = Total_Male_Tests), stat = "identity", fill = "skyblue", alpha = 0.7, width = 0.4) +
geom_line(aes(y = Male_Reduction * 5), group = 1, color = "red", size = 1.5) +  # Scaling reduction to match total tests
geom_point(aes(y = Male_Reduction * 5), color = "red", size = 3) +
labs(title = "Total Male Tests and Reduction by Period",
x = "Period", y = "Total Male Tests / Male Tests Reduction (Scaled)") +
scale_y_continuous(labels = label_comma()) +  # Format y-axis labels with commas for readability
theme_minimal()
source("~/Desktop/Rayhan/CodePractice(Git)/R/KV6015-AssessmentRoughAnswer.R")
# Plot for total male tests conducted and reductions
ggplot(data_tibble_summary, aes(x = Period)) +
geom_bar(aes(y = Total_Male_Tests), stat = "identity", fill = "skyblue", alpha = 0.7, width = 0.4) +
geom_line(aes(y = Male_Reduction * 5), group = 1, color = "red", size = 1.5) +  # Scaling reduction to match total tests
geom_point(aes(y = Male_Reduction * 5), color = "red", size = 3) +
labs(title = "Total Male Tests and Reduction by Period",
x = "Period", y = "Total Male Tests / Male Tests Reduction (Scaled)") +
scale_y_continuous(labels = label_comma()) +  # Format y-axis labels with commas for readability
theme_minimal()
# Plot for total female tests conducted and reductions
ggplot(data_tibble_summary, aes(x = Period)) +
geom_bar(aes(y = Total_Female_Tests), stat = "identity", fill = "lightgreen", alpha = 0.7, width = 0.4) +
geom_line(aes(y = Female_Reduction * 5), group = 1, color = "purple", size = 1.5) +  # Scaling reduction to match total tests
geom_point(aes(y = Female_Reduction * 5), color = "purple", size = 3) +
labs(title = "Total Female Tests and Reduction by Period",
x = "Period", y = "Total Female Tests / Female Tests Reduction (Scaled)") +
scale_y_continuous(labels = label_comma()) +  # Format y-axis labels with commas for readability
theme_minimal()
# Plot for total male tests conducted and reductions
ggplot(data_tibble_summary, aes(x = Period)) +
geom_bar(aes(y = Total_Male_Tests), stat = "identity", fill = "skyblue", alpha = 0.7, width = 0.4) +  # Total male tests
geom_line(aes(y = Male_Reduction * 5), group = 1, color = "red", size = 1.5) +  # Scaling reduction to match total tests
geom_point(aes(y = Male_Reduction * 5), color = "red", size = 3) +  # Points for reductions
labs(title = "Total Male Tests and Reduction by Period",
x = "Period", y = "Total Male Tests / Male Tests Reduction (Scaled)") +
scale_y_continuous(labels = label_comma()) +  # Format y-axis labels with commas
theme_minimal()
source("~/Desktop/Rayhan/CodePractice(Git)/R/KV6015-AssessmentRoughAnswer.R")
ggplot(data_tibble, aes(x = Period)) +
geom_bar(aes(y = Male_tests_Conducted), stat = "identity", fill = "skyblue", alpha = 0.7) +
geom_line(aes(y = Male_tests_Reduction * 10), group = 1, color = "red", size = 1) +
geom_point(aes(y = Male_tests_Reduction * 10), color = "red", size = 3) +
labs(title = "Total Male Tests and Reduction by Period",
x = "Period",
y = "Total Male Tests / Male Tests Reduction (Scaled)") +
theme_minimal() +
scale_y_continuous(labels = scales::comma)
# Plot for total male tests conducted and reductions
# Ensure the reduction values are scaled properly for visibility
ggplot(data_tibble, aes(x = Period)) +
geom_bar(aes(y = `Male tests-Conducted`), stat = "identity", fill = "skyblue", alpha = 0.7) +
geom_line(aes(y = `Male tests-Passes` - `Male tests-Conducted`), group = 1, color = "red", size = 1) +
geom_point(aes(y = `Male tests-Passes` - `Male tests-Conducted`), color = "red", size = 3) +
labs(title = "Total Male Tests and Reduction by Period",
x = "Period",
y = "Total Male Tests / Male Tests Reduction (Scaled)") +
theme_minimal() +
scale_y_continuous(labels = scales::comma)
# Plot for total male tests conducted
ggplot(data_tibble, aes(x = Period)) +
geom_bar(aes(y = `Male tests-Conducted`), stat = "identity", fill = "skyblue", alpha = 0.7) +
labs(title = "Total Male Tests Conducted by Period",
x = "Period",
y = "Total Male Tests Conducted") +
theme_minimal() +
scale_y_continuous(labels = scales::comma)
# Plot for total female tests conducted
ggplot(data_tibble_summary, aes(x = Period)) +
geom_bar(aes(y = Total_Female_Tests), stat = "identity", fill = "lightgreen", alpha = 0.7, width = 0.4) +  # Total female tests
labs(title = "Total Female Tests Conducted by Period",
x = "Period", y = "Total Female Tests Conducted") +
scale_y_continuous(labels = scales::comma) +  # Format y-axis labels with commas
theme_minimal()
